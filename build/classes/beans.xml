<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<!-- 读取属性文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	
	<!-- 读取数据源 -->
	<bean id="propertyConfigurer"

              class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">

              <property name="locations">
                     <list>
                            <value>classpath:jdbc.properties</value>
                     </list>
              </property>

       </bean>
        <bean id="dataSource"
              class="org.springframework.jdbc.datasource.DriverManagerDataSource">

              <property name="driverClassName" value="${jdbc.driverClass}"></property>
              <property name="url" value="${jdbc.Url}"> </property>
              <property name="username" value="${jdbc.username}"></property>
              <property name="password" value="${jdbc.password}"></property>
       </bean>
	
	<!-- 建立本地sessionFactory bean -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<!-- 注入hibernate属性 配置方言，是否打印ddl、sql语句等 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
		<!-- hibernate映射文件的位置，可以有多个映射文件 -->
		<property name="mappingDirectoryLocations">
			<list>
				<value>classpath:com/lnx/oa/domain</value>
			</list>
		</property>
		
		<!-- 读取jbpm jar包中的映射文件 -->
		<property name="mappingJarLocations">
			<list>
				<value>/WEB-INF/lib/jbpm.jar</value>
			</list>
		</property>
	</bean>
	
	<!-- 配置hibernate事务管理器 -->
	<bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- 让提供注解支持 -->
	<context:annotation-config/>
	
	<!-- 对所有组件进行扫描 -->
	
	<context:component-scan base-package="com.lnx.oa"></context:component-scan>
	
	<!-- 提供注解的驱动 -->
	<tx:annotation-driven transaction-manager="txManager"/>
	
	<!-- 将jbpm与spring框架整合的核心类 -->
	<bean id="springHelper" class="org.jbpm.pvm.internal.processengine.SpringHelper">
		<!-- 指定jbpm的核心配置文件 -->
		<property name="jbpmCfg" value="jbpm.cfg.xml"> </property>
	</bean>
	<!-- 配置processEngine对象 -->
	<bean id="processEngine" factory-bean="springHelper" factory-method="createProcessEngine"></bean>
</beans>
